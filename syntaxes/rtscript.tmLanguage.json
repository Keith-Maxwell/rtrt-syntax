{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "rtscript",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#embedded"
        },
        {
            "include": "#unnamed_storage"
        },
        {
            "include": "#environment"
        },
        {
            "include": "#service"
        },
        {
            "include": "#test"
        },
        {
            "include": "#stubs"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#invalid"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.other.rtscript",
                    "match": "(?i)\\b(HEADER|BEGIN|FAMILY|INCLUDE|PTU)\\b"
                },
                {
                    "name": "keyword.control.rtscript",
                    "match": "(?i)\\b(INIT|EV|DELTA|STUB|USE|IF|ELSE|NEXT_TEST|EXCEPTION)\\b"
                },
                {
                    "name": "keyword.operator",
                    "match": "(?i)\\b(in|with)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.rtscript",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.rtscript",
                    "match": "\\\\."
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-dash.rtscript",
                    "begin": "--",
                    "end": "\\n"
                },
                {
                    "match": "(?i)^\\s*(COMMENT)\\s*(.*)\\n",
                    "captures": {
                        "1":{"name":"keyword.other.rtscript"},
                        "2":{"name":"comment.line.rtscript"}
                    }
                }
            ]
        },
        "embedded": {
            "comment": "all lines starting with # or @ are in c language and italic",
            "name": "markup.italic",
            "begin": "(#|@)",
            "end": "\\n",
            "beginCaptures": {
                "1": {
                    "name": "constant.character"
                }
            },
            "patterns": [
                {
                    "include": "source.c"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "storage.type.var.rtscript",
                    "match": "(?i)\\b(ARR|ARRAY|VAR|VARIABLE|STR|STRUCTURE)\\b",
                    "comment": "match the type"
                },
                {
                    "name": "variable.parameter.rtscript",
                    "match": "(?i)(?<=(ARR|ARRAY|VAR|VARIABLE|STR|STRUCTURE))\\s+([\\w\\.]+)",
                    "comment": "match the name of the variable"
                }
            ]
        },
        "service": {
            "comment": "match a named Service",
            "begin": "(?i)^\\s*(SERVICE)\\s+(\\w+)\\b",
            "end": "(?i)^\\s*(END\\s+SERVICE)\\b",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.class.rtscript"
                },
                "2": {
                    "name": "entity.name.class.rtscript"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "storage.type.class.rtscript"
                }
            },
            "contentName": "meta.service.rtscript",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "test": {
            "comment": "match a named Test",
            "begin": "(?i)^\\s*(TEST)\\s+(\\w+)\\b",
            "end": "(?i)^\\s*(END\\s+TEST)\\b",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.function.begin.rtscript"
                },
                "2": {
                    "name": "entity.name.function.rtscript"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "storage.type.function.end.rtscript"
                }
            },
            "contentName": "meta.test.rtscript",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "unnamed_storage": {
            "begin": "(?i)^\\s*(ELEMENT|INITIALIZATION|TERMINATION)\\b",
            "end": "(?i)^\\s*(END\\s+\\1)\\b",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.element.begin.rtscript"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "storage.type.element.end.rtscript"
                }
            },
            "contentName": "meta.unnamed_storage.rtscript",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "environment": {
            "begin": "(?i)^\\s*(ENVIRONMENT)\\s+(\\w+)\\b",
            "end": "(?i)^\\s*(END\\s+ENVIRONMENT)\\b",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.environment.begin.rtscript"
                },
                "2": {
                    "name": "entity.name.tag.rtscript"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "storage.type.environment.end.rtscript"
                }
            },
            "contentName": "meta.environment.rtscript",
            "patterns": [
                {
                    "include": "$self"
                },
                {            "include": "#stubs"
            }
            ]
        },
        "stubs": {
            "patterns": [
                {
                    "begin": "(?i)^\\s*(DEFINE\\s+STUB)\\s+([\\w\\.]+)\\b",
                    "end": "(?i)^\\s*(END\\s+DEFINE)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.other.environment.begin.rtscript"
                        },
                        "2": {
                            "name": "entity.name.function"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.other.environment.end.rtscript"
                        }
                    },
                    "contentName": "meta.environment.rtscript",
                    "patterns": [
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "match": "(?i)(?<=STUB)\\s+([\\w.]+)\\b",
                    "name":"entity.name.function"
                }
            ]
        }
    },
    "scopeName": "source.rtscript"
}
